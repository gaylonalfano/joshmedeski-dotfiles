#
# ███████╗███████╗███████╗██╗  ██╗     ██████╗ ██████╗ ███╗   ██╗███████╗██╗ ██████╗ 
# ██╔════╝██╔════╝██╔════╝██║  ██║    ██╔════╝██╔═══██╗████╗  ██║██╔════╝██║██╔════╝ 
# ███████╗█████╗  ███████╗███████║    ██║     ██║   ██║██╔██╗ ██║█████╗  ██║██║  ███╗
# ╚════██║██╔══╝  ╚════██║██╔══██║    ██║     ██║   ██║██║╚██╗██║██╔══╝  ██║██║   ██║
# ███████║███████╗███████║██║  ██║    ╚██████╗╚██████╔╝██║ ╚████║██║     ██║╚██████╔╝
# ╚══════╝╚══════╝╚══════╝╚═╝  ╚═╝     ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝     ╚═╝ ╚═════╝ 
#
# Smart session manager for the terminal
# https://github.com/joshmedeski/sesh

strict_mode = false

import = [
  "~/.config/sesh/configs/nu-sesh.toml",
  "~/.config/sesh/configs/raycast-extensions.toml",
]

# [marker]
# inactivity_threshold = 10    # Seconds before alerts start
# alert_level_1_time = 60      # Light alert duration
# alert_level_2_time = 300     # Medium alert duration
# alert_level_3_time = 600     # Urgent alert duration

blacklist = [
  "^scratch$",
  "^_"
]

# sort_order = ["tmux", "config", "tmuxinator", "zoxide"]

# default

[default_session]
startup_command = "nvim +GoToFile"
preview_command = "eza --all --git --icons --color=always {}"
# startup_command_ignore_dirs = ["~/repos", "~/.config"]

# common

[[session]]
name = "fastfetch"
path = "~/.config/fastfetch"
startup_command = "fastfetch"
preview_command = "fastfetch"

[[session]]
name = "rift"
path = "~/c/rift"
startup_command = "cargo run --bin rift --release"
preview_command = "bat --language=toml --style=snip --color=always ~/.rift.toml"

[[session]]
name = "wallpaper"
path = "~/.config/wezterm/wallpapers"
startup_command = "wezterm_wallpaper_picker.sh && exit"

[[session]]
name = "color scheme"
path = "~/c/iTerm2-Color-Schemes/wezterm"
startup_command = "wezterm_color_scheme_picker.sh && exit"

[[session]]
name = "second brain"
path = "~/c/second-brain"
# startup_command = "nvim +ObsidianToday"

[[session]]
name = "update"
path = "/tmp"
startup_command = "update"
preview_command = "bat --language=fish --style=snip --color=always ~/c/dotfiles/.config/bin/update"

[[session]]
name = "Downloads"
path = "~/Downloads"
startup_command = "yazi"

[[session]]
name = "repositories (c)"
path = "~/c"
startup_command = "l"

[[session]]
name = "home (~)"
path = "~"
disable_startup_command = true
# startup_command = "l"

# nutilti

# [[wildcard]]
# pattern = "~/c/nu/*"
# disable_startup_command = true
# startup_command = "lazygit"

[[session]]
name = "nutiliti pick worktree"
path = "~/c/nu"
startup_command = "sesh connect (find . -maxdepth 1 -type d | gum filter --limit 1 --fuzzy --no-sort --placeholder 'Pick a worktree' --prompt='🌲') && exit"

[[session]]
name = "nutiliti new worktree"
path = "~/c/nu"
startup_command = "nu_new_worktree"

[[session]]
name = "nutiliti reviews"
path = "~/c/nu/review"
startup_command = "gh dash"

# sesh

[[session]]
name = "sesh pick worktree"
path = "~/c/sesh"
startup_command = "sesh connect (find . -maxdepth 1 -type d | gum filter --limit 1 --fuzzy --no-sort --placeholder 'Pick a worktree' --prompt='🌲') && exit"

# josh medeski

[[session]]
name = "joshmedeski_com"
path = "~/c/joshmedeski.com"
startup_command = "~/.config/sesh/scripts/node_dev"

# configs

[[session]]
name = "dotfiles"
path = "~/c/dotfiles"

[[session]]
name = "wezterm config"
path = "~/c/dotfiles/.config/wezterm"
startup_command = "nvim wezterm.lua"

[[session]]
name = "neovim config"
path = "~/c/dotfiles/.config/nvim"

[[session]]
name = "aerospace config"
path = "~/c/dotfiles/.config/aerospace"
startup_command = "nvim aerospace.toml"
preview_command = "bat --language=bash --style=snip --color=always ~/c/dotfiles/.config/aerospace/aerospace.toml"

[[session]]
name = "fish config"
path = "/Users/joshmedeski/c/dotfiles/.config/fish"
preview_command = "bat --language=fish --style=snip --color=always ~/c/dotfiles/.config/fish/config.fish"

[[session]]
name = "sesh config"
path = "~/c/dotfiles/.config/sesh"
startup_command = "nvim sesh.toml"
preview_command = "bat --language=toml --style=snip --color=always ~/c/dotfiles/.config/sesh/sesh.toml"

[[session]]
name = "new sesh git worktree"
path = "~/c/sesh"
startup_command = "git worktree add (gum input --placeholder 'Enter new worktree name')"


[[session]]
name = "tmux config"
path = "~/c/dotfiles/.config/tmux"
startup_command = "nvim tmux.conf tmux-nerd-font-window-name.yml gitmux.yml"
preview_command = "bat --language=bash --style=snip --color=always ~/c/dotfiles/.config/tmux/tmux.conf"

[[session]]
name = "leaderkey config"
path = "nvim ~/c/dotfiles/.config/leaderkey/config.json"

[[session]]
name = "gitmux config"
path = "~/c/dotfiles/.config/tmux"
startup_command = "nvim gitmux.conf"

[[session]]
name = "hammerspoon config"
path = "~/c/dotfiles/.hammerspoon"

[[session]]
name = "yazi config"
path = "~/c/dotfiles/.config/yazi"
startup_command = "nvim yazi.toml"

[[session]]
name = "my custom binaries"
path = "~/c/dotfiles/.config/bin"

[[session]]
name = "ghostty config"
path = "~/c/dotfiles/.config/ghostty"
startup_command = "nvim config"

[[session]]
name = "karabiner elements config"
path = "~/c/dotfiles/.config/karabiner"

[[session]]
name = "/ect/hosts"
path = "/etc"
startup_command = "sudo nvim hosts"

[[session]]
name = "lazyvim config (legacy)"
path = "~/c/dotfiles/.config/lazyvim"

# plugins

[[session]]
name = "lazy plugins"
path = "~/.local/share/nvim/lazy"
startup_command = "sesh connect (ls | fzf --ansi --no-border --preview 'glow -s light {}/README.md' --preview-window=right:70,border-none) && exit"
# TODO: add `--hide-tmux` to fzf command (or switch to sesh preview)
# startup_command = "sesh connect (ls | fzf --ansi --no-border --preview 'glow -s light {}/README.md' --preview-window=right:70,border-none --hide-tmux) && exit"

[[session]]
name = "tmux plugins"
path = "~/.config/tmux/plugins"
startup_command = "sesh connect (ls | fzf --ansi --no-border --preview 'glow -s light {}/README.md' --preview-window=right:70,border-none) && exit"

[[session]]
name = "obsidian plugins"
path = "~/c/second-brain/.obsidian/plugins"
startup_command = "sesh connect (ls | fzf --ansi --no-border --preview 'glow -s light {}/README.md' --preview-window=right:85,border-none) && exit"

[[session]]
name = "obs plugins"
path = "~/Library/Application Support/obs-studio/plugins"
startup_command = "sesh connect (ls | fzf --ansi --no-border --preview 'glow -s light {}/README.md' --preview-window=right:85,border-none) && exit"

# tools

[[session]]
name = "mactop"
path = "/"
startup_command = "sudo mactop"

[[session]]
name = "ollama"
path = "~/.ollama"
startup_command = 'grc tail -f ~/.ollama/logs/server.log'

[[session]]
name = "blender mcp logs"
path = "~/Library/Logs/Claude/"
startup_command = "grc tail -f ~/Library/Logs/Claude/mcp-server-blender.log"

[[session]]
name = "macmon"
path = "~/"
startup_command = "macmon"

[[session]]
name = "cava (audio visualizer)"
path = "~/.config/cava"
startup_command = "tmux set-option -t cava status off && cava"

# other

[[session]]
name = "perplexica"
path = "~/c/perplexica"
# startup_command = "docker compose up -d"
windows = ["git"]

[[session]]
name = "steam deck"
path = "~/.ssh"
startup_command = "ssh deck@steamdeck"

# ideas / tasks

# TODO: experiment with long-living sesh picker (as session)
# [[session]]
# name = "sesh"
# path = "~/c/dotfiles/.config/sesh"
# startup_command = "sesh connect \"$(sesh list --icons | fzf)\""

# TODO: implement?
# [[session_preview]]
# pattern_folder_has = "README.md"
# preview_command = "glow -s light {}"

# TODO: potential feature ideas
# [[session]]
# name = "session"
# path = "~/path/to/session"
# startup_script = "~/git_repos/dotfiles/sesh/bin/spotify.sh"
# detached = true # never attach to this session, just create it in the background
# tmuxp = "~/.config/tmux/tmuxp/joshmedeski.com.yml"
# tmuxinator = "~/.config/tmux/tmuxinator/joshmedeski.com.yml"

# TODO: support wildcard paths
# [[session_wildcard]]
# session_path = "~/c/nu/main/packages/*"
# script_path = "~/.config/sesh/scripts/node_dev"

# notes

# NOTE: bat styles (--style)
# full, auto, plain, changes, header, header-filename,

# windows

[[window]]
name = "git"
startup_script = "git pull && lazygit"
