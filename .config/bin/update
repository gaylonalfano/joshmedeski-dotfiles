#!/usr/bin/env fish
# ██╗   ██╗██████╗ ██████╗  █████╗ ████████╗███████╗
# ██║   ██║██╔══██╗██╔══██╗██╔══██╗╚══██╔══╝██╔════╝
# ██║   ██║██████╔╝██║  ██║███████║   ██║   █████╗
# ██║   ██║██╔═══╝ ██║  ██║██╔══██║   ██║   ██╔══╝
# ╚██████╔╝██║     ██████╔╝██║  ██║   ██║   ███████╗
#  ╚═════╝ ╚═╝     ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝
#  A script to update all the things

# TODO: update to use AI to summarize

tmux rename-session -t $(tmux display-message -p '#S') "🌎 updating"

gum style \
    --foreground 12 --border-foreground 12 --border double \
    --align center --width 60 --margin "1 0" --padding "1 0" \
    '██╗   ██╗██████╗ ██████╗  █████╗ ████████╗███████╗
██║   ██║██╔══██╗██╔══██╗██╔══██╗╚══██╔══╝██╔════╝
██║   ██║██████╔╝██║  ██║███████║   ██║   █████╗  
██║   ██║██╔═══╝ ██║  ██║██╔══██║   ██║   ██╔══╝  
╚██████╔╝██║     ██████╔╝██║  ██║   ██║   ███████╗
 ╚═════╝ ╚═╝     ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝'

set -l NOW (date +"%Y-%m-%d-%H-%M-%S")
echo -e "$NOW\n" >>/tmp/u-$NOW.txt

tmux split-window -h "tail -f /tmp/u-$NOW.txt"

# gh cli extensions
set GH_EXTENSION_UPDATE $(gum spin --spinner globe --title "🐙 gh extensions upgrading..." -- gh extension upgrade --all)

echo "✅ 🐙 gh extensions upgraded"
# echo "$GH_EXTENSION_UPDATE" | mods --role updates_gh_dash --no-cache -q

echo $GH_EXTENSION_UPDATE >>/tmp/u-$NOW.txt
echo "\n" >>/tmp/u-$NOW.txt

# tpm plugins
gum spin --spinner globe --title "🪟 tpm plugins updating..." -- ~/.config/tmux/plugins/tpm/bin/update_plugins all >>/tmp/u-$NOW.txt

echo "\n" >>/tmp/u-$NOW.txt
echo "✅ 🪟 tpm plugins updated"

gum spin --spinner globe --title "🐠 fisher plugins updating..." -- fisher update >>/tmp/u-$NOW.txt
echo "\n" >>/tmp/u-$NOW.txt
echo "✅ 🐠 fisher plugins updated"

# TODO: auto-open neovim instead?
# gum spin --spinner globe --title "💤 lazy.nvim syncing..." -- nvim --headless "+Lazy! sync" +qa
# echo "\n" >>/tmp/u-$NOW.txt
# echo "✅ 💤 lazy.nvim synced"

# gum spin --spinner globe --title "🧰 mason.nvim tools updating" -- nvim --headless -c MasonToolsUpdate -c "autocmd User MasonToolsUpdateCompleted quitall!"
# echo "\n" >>/tmp/u-$NOW.txt
# echo "✅ 🧰 mason.nvim tools updated"

gum spin --spinner globe --title "🌳 nvim-treesitter updating" -- nvim --headless -c TSUpdate +qa
echo "\n" >>/tmp/u-$NOW.txt
echo "✅ 🌳 nvim-treesitter updated"

gum spin --spinner globe --title "🍻 brew updating" -- brew update >>/tmp/u-$NOW.txt
echo "\n" >>/tmp/u-$NOW.txt
echo "✅ 🍻 brew updated"

set -l OUTDATED (brew outdated)
echo $OUTDATED >>/tmp/u-$NOW.txt

if test -n "$OUTDATED"
    gum spin --spinner globe --title "🍻 brew upgrading" -- brew upgrade >>/tmp/u-$NOW.txt
    echo "\n" >>/tmp/u-$NOW.txt
    echo "✅ 🍻 brew upgraded"

    gum spin --spinner globe --title "🍻 brew cleaning up" -- brew cleanup --prune=all >>/tmp/u-$NOW.txt
    echo "\n" >>/tmp/u-$NOW.txt
    echo "✅ 🍻 brew cleaned up"
else
    echo "No outdated brew packages" >>/tmp/u-$NOW.txt
end

gum spin --spinner globe --title "🍻 brew doctoring" -- brew doctor >>/tmp/u-$NOW.txt
echo "\n" >>/tmp/u-$NOW.txt
echo "✅ 🍻 brew doctored"

gum spin --spinner globe --title "🍎 mas upgrading" -- mas upgrade >>/tmp/u-$NOW.txt
echo "\n" >>/tmp/u-$NOW.txt
echo "✅ 🍎 mas upgraded"

gum spin --spinner globe --title "🧶 fabric upgrading" -- go install github.com/danielmiessler/fabric@latest >>/tmp/u-$NOW.txt
echo "\n" >>/tmp/u-$NOW.txt
echo "✅ 🧶 fabric upgraded"

echo "✅ 🧾 logged to /tmp/u-$NOW.txt"

# TODO: create fabric prompt to summarize all the updates
# TODO: output summmary with glow (already done?)

# tmux rename-session -t $(tmux display-message -p '#S') "🌎 updated"
# say "	All modules updated. Handing control back to operator."
